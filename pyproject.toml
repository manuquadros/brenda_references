[project]
name = "brenda_references"
version = "0.1.0"
description = ""
authors = [
  { name = "Emanuel Quadros", email = "emanuel.quadros@dsmz.de" },
]
requires-python = ">=3.12"
readme = "README.md"
dependencies = [
  "aiotinydb>=2.0.0,<3",
  "apiadapters",
  "cacheout>=0.16.0,<0.17",
  "frozendict>=2.4.6",
  "gme",
  "loggers",
  "lpsn-interface>=0.1.0",
  "ncbitax",
  "nltk>=3.9.1,<4",
  "orjson>=3.10.15",
  "pandas>=2.2.3,<3",
  "pydantic>=2.10.5,<3",
  "rapidfuzz>=3.10.1,<4",
  "retrying>=1.3.4,<2",
  "sqlmodel==0.*",
  "stackprinter>=0.2.12",
  "tinydb>=4.8.2,<5",
  "tqdm>=4.67.0,<5",
]

[project.scripts]
update_pmc_open = "scripts.update_pmc_open:main"
sync_doc_db = "src.brenda_references.brenda_references:sync_doc_db"
retrieve_text = "scripts.retrieve_text:main"
fix_missing_strains = "scripts.fix_missing_strains:main"
preannotate = "scripts.preannotate:main"
preannotate_hmm = "scripts.preannotate_hmm:main"
generate_json_schemas = "scripts.generate_json_schemas:main"
generate_entity_names_dataset = "scripts.generate_entity_names_dataset:main"
statistics = "scripts.statistics:main"

[tool.uv.sources]
gme = { git = "https://github.com/idiap/gme-sampler" }
loggers = { git = "ssh://git@github.com/manuquadros/loggers.git" }
apiadapters = { git = "ssh://git@github.com/manuquadros/apiadapters.git" }

[tool.hatch.build.targets.wheel.force-include]
"config.toml" = "brenda_references/config.toml"
"resources" = "brenda_references/resources"
"data/test_data.csv" = "brenda_references/data/test_data.csv"
"data/validation_data.csv" = "brenda_references/data/validation_data.csv"
"data/training_data.csv" = "brenda_references/data/training_data.csv"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "pip-check>=3.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
]

[tool.pytest.ini_options]
addopts = [
  "--cov=brenda_references",
  "--cov-report=xml"
]
