[project]
name = "brenda_references"
version = "0.1.0"
description = ""
authors = [
  { name = "Emanuel Quadros", email = "emanuel.quadros@dsmz.de" },
]
requires-python = "~=3.11"
readme = "README.md"
dependencies = [
  "aiotinydb>=2.0.0,<3",
  "apiadapters",
  "cacheout>=0.16.0,<0.17",
  "frozendict>=2.4.6",
  "gme",
  "httpx>=0.28.1,<0.29",
  "lxml>=5.3.0,<6",
  "nltk>=3.9.1,<4",
  "orjson>=3.10.15",
  "pandas>=2.2.3,<3",
  "pydantic>=2.10.5,<3",
  "pytest-asyncio>=0.25.3,<0.26",
  "rapidfuzz>=3.10.1,<4",
  "requests>=2.32.3,<3",
  "retrying>=1.3.4,<2",
  "sqlmodel==0.*",
  "tinydb>=4.8.2,<5",
  "tqdm>=4.67.0,<5",
  "xmlparser",
  "xmltodict>=0.14.2,<0.15",
]

[project.scripts]
update_pmc_open = "scripts.update_pmc_open:main"
sync_doc_db = "src.brenda_references.brenda_references:sync_doc_db"
retrieve_text = "scripts.retrieve_text:main"
fix_missing_strains = "scripts.fix_missing_strains:main"
preannotate = "scripts.preannotate:main"
preannotate_hmm = "scripts.preannotate_hmm:main"
generate_json_schemas = "scripts.generate_json_schemas:main"
generate_entity_names_dataset = "scripts.generate_entity_names_dataset:main"
statistics = "scripts.statistics:main"

[tool.hatch.build.targets.sdist]
include = [
  "src/brenda_references",
  "scripts",
  "config.toml",
  "data/bacteria.txt",
  "data/lpsn_gss_2024-11-19.csv",
]

[tool.hatch.build.targets.wheel]
include = [
  "src/brenda_references",
  "scripts",
  "config.toml",
  "data/bacteria.txt",
  "data/lpsn_gss_2024-11-19.csv",
]

[tool.hatch.build.targets.wheel.sources]
"src/brenda_references" = "brenda_references"

[tool.uv.sources]
xmlparser = { workspace = true }
gme = { git = "https://github.com/idiap/gme-sampler" }
apiadapters = { workspace = true }

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "ipython-autotime>=0.3.2",
]
